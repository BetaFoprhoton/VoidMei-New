selector{
  name:t="defaultCTABot"
  selectStrategy:t="ordered"

  reaction{
    event:t="groundAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="collisionAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="outsideBattleField"

    flyToPos{
      speed:r=550.0
      dist:r=-1.0
      minAlt:r=100.0
      destType:t="battleField"
    }
  }

  selector{
    selectStrategy:t="ordered"
    name:t="taxi_and_takeoff"

    reaction{
      event:t="groundAhead"
    }

    reaction{
      event:t="collisionAhead"
    }

    reaction{
      event:t="outsideBattleField"
    }

    sequencer{

      isOnAirfield{
      }

      findClosestAirfield{
      }

      waitForAirfieldClearance{
      }

      taxiOnAirfield{
      }

      takeoff{
      }
    }

    waitOnLand{
    }
  }

  reaction{
    event:t="almostBeenHit"

    setNodeWithName{
      nodeName:t="doPanic"
    }
  }

  reaction{
    event:t="almostBeenHitFront"

    setNodeWithName{
      nodeName:t="doFrontalPanic"
    }
  }

  selector{
    selectStrategy:t="random"

    sequencer{

      reaction{
        event:t="regularCheck"

        sequencer{

          not{

            isInOuterFightArea{
            }
          }

          recalculateTree{
          }
        }
      }

      setSuitableFightArea{
        tagToCheck:t="fighter"
        innerRad:r=2500.0
        outerRad:r=4000.0
      }

      stayInFightArea{
      }

      findUnit{
        searchForAir:b=no
        searchForGround:b=yes
        onlyMissionTargets:b=no
        radius:r=100000.0
      }

      selector{
        selectStrategy:t="ordered"

        torpedoTarget{
        }

        bombTarget{
        }

        fighterAttackGround{
        }
      }
    }

    sequencer{

      reaction{
        event:t="regularCheck"

        sequencer{

          not{

            isInOuterFightArea{
            }
          }

          recalculateTree{
          }
        }
      }

      setSuitableFightArea{
        tagToCheck:t="fighter"
        innerRad:r=2500.0
        outerRad:r=4000.0
      }

      stayInFightArea{
      }

      parallel{

        updateTarget{
          searchForAir:b=yes
          onlyMissionTargets:b=no
          radius:r=100000.0
          distanceDifferenceToMaxSpeedRatio:r=9.0
        }

        ifThenElse{

          or{

            isTargetType{
              type:t="fighter"
            }

            isTargetType{
              type:t="bomber"
            }
          }

          selector{

            fighterAttackFighter{
              allowSpeedCheat:b=no
            }
          }

          fighterAttackGround{
          }
        }
      }
    }
  }

  sequencer{

    orbitHere{
      speed:r=260.0
      rollFactor:r=0.2
      alt:r=3000.0
      maxTime:r=10.0
    }
  }

  selector{
    name:t="doPanic"

    rollManeuver{
    }

    bellManeuver{
    }

    roll180Man{
    }

    waveout{
    }

    sinus{
    }

    zigzagSplit{
    }
  }

  selector{
    name:t="doFrontalPanic"

    rollManeuver{
    }

    roll180Man{
    }

    sinus{
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      timeToTurn:r=1.3
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      timeToTurn:r=1.3
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      timeToTurn:r=0.4
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      timeToTurn:r=0.4
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      timeToTurn:r=0.5
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      timeToTurn:r=0.5
    }
  }
}

selector{
  name:t="assaultBot"
  selectStrategy:t="ordered"

  reaction{
    event:t="groundAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="collisionAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="outsideBattleField"

    flyToPos{
      speed:r=550.0
      dist:r=-1.0
      minAlt:r=100.0
      destType:t="battleField"
    }
  }

  selector{
    selectStrategy:t="ordered"
    name:t="taxi_and_takeoff"

    reaction{
      event:t="groundAhead"
    }

    reaction{
      event:t="collisionAhead"
    }

    reaction{
      event:t="outsideBattleField"
    }

    sequencer{

      isOnAirfield{
      }

      findClosestAirfield{
      }

      waitForAirfieldClearance{
      }

      taxiOnAirfield{
      }

      takeoff{
      }
    }

    waitOnLand{
    }
  }

  sequencer{

    findUnit{
      searchForAir:b=no
      searchForGround:b=yes
      onlyMissionTargets:b=no
      radius:r=100000.0
    }

    selector{
      selectStrategy:t="ordered"

      torpedoTarget{
      }

      bombTarget{
      }

      fighterAttackGround{
      }
    }
  }

  parallel{

    updateTarget{
      searchForAir:b=yes
      onlyMissionTargets:b=no
      radius:r=100000.0
      distanceDifferenceToMaxSpeedRatio:r=9.0
    }

    ifThenElse{

      or{

        isTargetType{
          type:t="fighter"
        }

        isTargetType{
          type:t="bomber"
        }
      }

      selector{

        fighterAttackFighter{
          allowSpeedCheat:b=no
        }
      }

      fighterAttackGround{
      }
    }
  }
}

selector{
  name:t="captureBot"
  selectStrategy:t="ordered"

  reaction{
    event:t="groundAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="collisionAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="outsideBattleField"

    flyToPos{
      speed:r=550.0
      dist:r=-1.0
      minAlt:r=100.0
      destType:t="battleField"
    }
  }

  selector{
    selectStrategy:t="ordered"
    name:t="taxi_and_takeoff"

    reaction{
      event:t="groundAhead"
    }

    reaction{
      event:t="collisionAhead"
    }

    reaction{
      event:t="outsideBattleField"
    }

    sequencer{

      isOnAirfield{
      }

      findClosestAirfield{
      }

      waitForAirfieldClearance{
      }

      taxiOnAirfield{
      }

      takeoff{
      }
    }

    waitOnLand{
    }
  }

  reaction{
    event:t="almostBeenHit"

    setNodeWithName{
      nodeName:t="doPanic"
    }
  }

  reaction{
    event:t="almostBeenHitFront"

    setNodeWithName{
      nodeName:t="doFrontalPanic"
    }
  }

  sequencer{

    ifThenElse{

      and{

        checkCaptureZone{
          varName:t="zoneToCapture"
          cond:t="landOnly"
        }

        findAirportAtCZ{
          varName:t="zoneToCapture"
        }
      }

      sequencer{

        findApproachPos{
          dist:r=2600.0
        }

        flyToPos{
          speed:r=350.0
          dist:r=1250.0
          minAlt:r=100.0
        }

        findApproachPos{
          dist:r=900.0
        }

        flyToPos{
          speed:r=200.0
          dist:r=350.0
          minAlt:r=20.0
        }

        sequencer{

          reaction{
            event:t="groundAhead"
          }

          reaction{
            event:t="collisionAhead"
          }

          land{
          }

          afterLanding{
          }
        }
      }

      sequencer{

        setCaptureZoneAsDestination{
          varName:t="zoneToCapture"
        }

        flyToPos{
          speed:r=350.0
          dist:r=350.0
          minAlt:r=200.0
        }
      }
    }
  }

  selector{
    name:t="doPanic"

    rollManeuver{
    }

    bellManeuver{
    }

    roll180Man{
    }

    waveout{
    }

    sinus{
    }

    zigzagSplit{
    }
  }

  selector{
    name:t="doFrontalPanic"

    rollManeuver{
    }

    roll180Man{
    }

    sinus{
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=1.3
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=1.3
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.4
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.4
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.5
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.5
    }
  }
}

selector{
  name:t="assistCaptureBot"
  selectStrategy:t="ordered"

  reaction{
    event:t="groundAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="collisionAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="outsideBattleField"

    flyToPos{
      speed:r=550.0
      dist:r=-1.0
      minAlt:r=100.0
      destType:t="battleField"
    }
  }

  selector{
    selectStrategy:t="ordered"
    name:t="taxi_and_takeoff"

    reaction{
      event:t="groundAhead"
    }

    reaction{
      event:t="collisionAhead"
    }

    reaction{
      event:t="outsideBattleField"
    }

    sequencer{

      isOnAirfield{
      }

      findClosestAirfield{
      }

      waitForAirfieldClearance{
      }

      taxiOnAirfield{
      }

      takeoff{
      }
    }

    waitOnLand{
    }
  }

  reaction{
    event:t="almostBeenHit"

    setNodeWithName{
      nodeName:t="doPanic"
    }
  }

  reaction{
    event:t="almostBeenHitFront"

    setNodeWithName{
      nodeName:t="doFrontalPanic"
    }
  }

  setAsLeader{
    varName:t="planeToAssist"
  }

  sequencer{

    reaction{
      event:t="regularCheck"

      sequencer{

        or{

          isTargetDist{
            useTarget:b=no
            op:t="greater"
            dist:r=2000.0
          }

          isTargetDist{
            useTarget:b=yes
            op:t="greater"
            dist:r=2000.0
          }
        }

        recalculateTree{
        }
      }
    }

    isTargetDist{
      useTarget:b=no
      op:t="less"
      dist:r=2000.0
    }

    findUnit{
      searchForAir:b=yes
      onlyMissionTargets:b=no
      radius:r=2000.0
      degreesToCheck:r=50.0
    }

    selector{

      fighterAttackFighter{
        allowSpeedCheat:b=no
      }
    }
  }

  reaction{
    event:t="regularCheck"

    isTargetDist{
      useTarget:b=yes
      op:t="greater"
      dist:r=2000.0
    }

    findUnit{
      searchForAir:b=yes
      onlyMissionTargets:b=no
      radius:r=2000.0
      degreesToCheck:r=50.0
    }

    recalculateTree{
    }
  }

  followTarget{
    offset:p3=-20.0, 10.0, 30.0
    useTarget:b=no
  }

  selector{
    name:t="doPanic"

    rollManeuver{
    }

    bellManeuver{
    }

    roll180Man{
    }

    waveout{
    }

    sinus{
    }

    zigzagSplit{
    }
  }

  selector{
    name:t="doFrontalPanic"

    rollManeuver{
    }

    roll180Man{
    }

    sinus{
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=1.3
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=1.3
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.4
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.4
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.5
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.5
    }
  }
}

selector{
  name:t="defenderBot"
  selectStrategy:t="ordered"

  reaction{
    event:t="groundAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="collisionAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="outsideBattleField"

    flyToPos{
      speed:r=550.0
      dist:r=-1.0
      minAlt:r=100.0
      destType:t="battleField"
    }
  }

  selector{
    selectStrategy:t="ordered"
    name:t="taxi_and_takeoff"

    reaction{
      event:t="groundAhead"
    }

    reaction{
      event:t="collisionAhead"
    }

    reaction{
      event:t="outsideBattleField"
    }

    sequencer{

      isOnAirfield{
      }

      findClosestAirfield{
      }

      waitForAirfieldClearance{
      }

      taxiOnAirfield{
      }

      takeoff{
      }
    }

    waitOnLand{
    }
  }

  reaction{
    event:t="almostBeenHit"

    setNodeWithName{
      nodeName:t="doPanic"
    }
  }

  reaction{
    event:t="almostBeenHitFront"

    setNodeWithName{
      nodeName:t="doFrontalPanic"
    }
  }

  setCaptureZoneAsDestination{
    varName:t="zoneToDefend"
  }

  selector{
    selectStrategy:t="ordered"

    sequencer{

      reaction{
        event:t="regularCheck"

        sequencer{

          or{

            isDistToDest{
              op:t="greater"
              dist:r=4000.0
            }

            isTargetDist{
              useTarget:b=yes
              op:t="greater"
              dist:r=6000.0
            }
          }

          recalculateTree{
          }
        }
      }

      isDistToDest{
        op:t="less"
        dist:r=2000.0
      }

      or{

        findEnemyInZone{
        }

        findUnit{
          searchForAir:b=yes
          onlyMissionTargets:b=no
          radius:r=2000.0
        }
      }

      selector{

        fighterAttackFighter{
          allowSpeedCheat:b=no
        }
      }
    }

    sequencer{

      flyToPos{
        speed:r=750.0
        dist:r=1500.0
        minAlt:r=200.0
        maxTime:r=5.0
      }

      setCaptureZoneAsDestination{
        varName:t="zoneToDefend"
      }

      flyToPos{
        speed:r=260.0
        dist:r=50.0
        minAlt:r=200.0
        maxTime:r=5.0
      }
    }
  }

  selector{
    name:t="doPanic"

    rollManeuver{
    }

    bellManeuver{
    }

    roll180Man{
    }

    waveout{
    }

    sinus{
    }

    zigzagSplit{
    }
  }

  selector{
    name:t="doFrontalPanic"

    rollManeuver{
    }

    roll180Man{
    }

    sinus{
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=1.3
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=1.3
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.4
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.4
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.5
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      extremeElevator:b=yes
      timeToTurn:r=0.5
    }
  }
}

selector{
  name:t="seekerBot"
  selectStrategy:t="ordered"

  reaction{
    event:t="groundAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="collisionAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="outsideBattleField"

    flyToPos{
      speed:r=550.0
      dist:r=-1.0
      minAlt:r=100.0
      destType:t="battleField"
    }
  }

  selector{
    selectStrategy:t="ordered"
    name:t="taxi_and_takeoff"

    reaction{
      event:t="groundAhead"
    }

    reaction{
      event:t="collisionAhead"
    }

    reaction{
      event:t="outsideBattleField"
    }

    sequencer{

      isOnAirfield{
      }

      findClosestAirfield{
      }

      waitForAirfieldClearance{
      }

      taxiOnAirfield{
      }

      takeoff{
      }
    }

    waitOnLand{
    }
  }

  reaction{
    event:t="almostBeenHit"

    setNodeWithName{
      nodeName:t="doPanic"
    }
  }

  reaction{
    event:t="almostBeenHitFront"

    setNodeWithName{
      nodeName:t="doFrontalPanic"
    }
  }

  parallel{

    updateTarget{
      searchForAir:b=yes
      onlyMissionTargets:b=no
      radius:r=200000.0
      distanceDifferenceToMaxSpeedRatio:r=9.0
    }

    ifThenElse{

      or{

        isTargetType{
          type:t="fighter"
        }

        isTargetType{
          type:t="bomber"
        }
      }

      selector{

        fighterAttackFighter{
          allowSpeedCheat:b=no
        }
      }

      fighterAttackGround{
      }
    }
  }

  orbitHere{
    speed:r=260.0
    rollFactor:r=0.2
    alt:r=3000.0
    maxTime:r=10.0
  }

  selector{
    name:t="doPanic"

    rollManeuver{
    }

    bellManeuver{
    }

    roll180Man{
    }

    waveout{
    }

    sinus{
    }

    zigzagSplit{
    }
  }

  selector{
    name:t="doFrontalPanic"

    rollManeuver{
    }

    roll180Man{
    }

    sinus{
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      timeToTurn:r=1.3
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      timeToTurn:r=1.3
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      timeToTurn:r=0.4
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      timeToTurn:r=0.4
    }

    turn{
      direction:t="right"
      maxRoll:r=60.0
      timeToTurn:r=0.5
    }

    turn{
      direction:t="left"
      maxRoll:r=60.0
      timeToTurn:r=0.5
    }
  }
}

selector{
  name:t="idleBot"
  selectStrategy:t="ordered"

  reaction{
    event:t="groundAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="collisionAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="outsideBattleField"

    flyToPos{
      speed:r=550.0
      dist:r=-1.0
      minAlt:r=100.0
      destType:t="battleField"
    }
  }

  selector{
    selectStrategy:t="ordered"
    name:t="taxi_and_takeoff"

    reaction{
      event:t="groundAhead"
    }

    reaction{
      event:t="collisionAhead"
    }

    reaction{
      event:t="outsideBattleField"
    }

    sequencer{

      isOnAirfield{
      }

      findClosestAirfield{
      }

      waitForAirfieldClearance{
      }

      taxiOnAirfield{
      }

      takeoff{
      }
    }

    waitOnLand{
    }
  }

  sequencer{

    findCaptureZone{
      zoneType:t="enemy"
      varName:t="zoneToCapture"
    }

    setCaptureZoneAsDestination{
      varName:t="zoneToCapture"
    }

    flyToPos{
      speed:r=350.0
      dist:r=350.0
      minAlt:r=200.0
    }
  }
}

selector{
  name:t="rearmingBot"
  selectStrategy:t="ordered"

  reaction{
    event:t="groundAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="collisionAhead"

    parallel{

      turnToEvasiveDir{
      }

      stayAtSpeed{
        speedMode:t="boostOn"
      }
    }
  }

  reaction{
    event:t="outsideBattleField"

    flyToPos{
      speed:r=550.0
      dist:r=-1.0
      minAlt:r=100.0
      destType:t="battleField"
    }
  }

  selector{
    selectStrategy:t="ordered"
    name:t="taxi_and_takeoff"

    reaction{
      event:t="groundAhead"
    }

    reaction{
      event:t="collisionAhead"
    }

    reaction{
      event:t="outsideBattleField"
    }

    sequencer{

      isOnAirfield{
      }

      findClosestAirfield{
      }

      waitForAirfieldClearance{
      }

      taxiOnAirfield{
      }

      takeoff{
      }
    }

    waitOnLand{
    }
  }

  sequencer{

    orbitHere{
      speed:r=260.0
      rollFactor:r=0.2
      alt:r=1500.0
      maxTime:r=60.0
    }

    restore{
      rearm:b=yes
    }
  }
}

selector{
  name:t="tankBot"
  selectStrategy:t="ordered"

  sequencer{

    selector{
      selectStrategy:t="ordered"
      selectOnSuccess:b=yes

      setCapturePointAsDest{
        dist:r=20.0
      }

      selectExplicitDestination{
        minDist:r=20.0
      }
    }

    driveToPos{
      dist:r=10.0
    }
  }
}

selector{
  name:t="shipBot"
  selectStrategy:t="ordered"

  cycle{

    sequencer{

      selector{
        selectStrategy:t="ordered"
        selectOnSuccess:b=yes

        findNextShipWaypoint{
        }

        checkIfShipHasDestination{
        }

        findCapturePointToSail{
          canCapture:b=yes
        }

        shipFollowsTarget{
        }
      }

      sailToPos{
        dist:r=100.0
      }
    }
  }

  stopShipEngine{
  }
}